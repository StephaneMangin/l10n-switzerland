sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.7.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=enfinfidu
    - GENERATED_IMAGE=${COMPOSE_PROJECT_NAME}_odoo
    - DOCKER_HUB_REPO=camptocamp/${GENERATED_IMAGE}
    - RANCHER_MINION_SERVER=https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch
    # rancher minion server token:
    - secure: "N6ZL7P71p233lRzz45xaGCcOjkD/Dw7CMtnk6St6l8BlowTdQo6dWbebuxVMA8O6otteNVOSVMaT++/jfAjljF367hY1/UfzuC7bN8yTGepSM9FCetTf06B85URyMkS0+c3PUD8rUKW2Cfpo5KxPBxsPLcNAi4rrzSJlfKfIhzUBZHZSI5f3KMiey6uKRMfN7WlWe3HacUDdeoafJ3awSmsxcUEpXWf8HsYGtWuKlRDVQxoR+xVDa1pT1oQAxoxs1M2JvYVbYqxlqcTQ/TrA1b035bu3x4pV74zCvDD+icMC/HbL5yhR3MlIINiWd7hikyERUIR4nSuEz1mje2OB1twq4kPbfxcOH99u70nKyRkG7ZggynQKpUP1vB1Wz3828UrKNVLfd5zf97ctFtsPa/BgXrQBZ+eTfhQmM5bqkdSlT9WfeI8TiS6c/yAGTNubgD1HTWaDa9/O+6pV5fzDCu7vuB/uz2+dxklRsq5JPSoVlcCYBwF22/pzAx0f14Y2m1BpEncO0iy9yg+t4zbIqOdH06GPPeX/tihEOPs2zCsukL2NnJLbWp+ZIqH2HjfiXsRubWWDA2xExyf6t6MafWnvoHQHQPyAoFZyltfzTSzrbo4Ho0vRRi12DwlGeGsKlVC11YksNvSZiOxli2Keh6BvtEnzuTTHWnVjG8O/4w8="

before_install:
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyOpenSSL ndg-httpsclient pyasn1 pyyaml; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e DEMO=True -e CI=True odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
